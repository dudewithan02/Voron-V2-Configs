#####################################################################
#   LED Control
#####################################################################

[neopixel caselight]
pin:PB6
chain_count:60
color_order:GRB
initial_RED:1.0
initial_GREEN:1.0
initial_BLUE:1.0

#####################################################################
#   Input Shaper
#####################################################################


[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

#[adxl345]
#cs_pin: EBBCan: gpio1
#spi_software_sclk_pin: EBBCan:gpio0
#spi_software_mosi_pin: EBBCan:gpio3
#spi_software_miso_pin: EBBCan:gpio2

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 30  # an example

[input_shaper]
shaper_freq_x: 57.8  # frequency for the X mark of the test model
shaper_type_x: mzv
shaper_freq_y: 40.4  # frequency for the Y mark of the test model
shaper_type_y: mzv

# Step 1:   Run TEST_RESONANCES AXIS=X
# Step 2:   Run TEST_RESONANCES AXIS=Y
# Step 3:   SSH and run:
#               ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#               ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
# Step 4:   View png filed in /tmp folder
# Step 5:   Update above frequencies with recommended outputs



#####################################################################
#   Macros
#####################################################################

[gcode_macro LIGHTS_ON]
gcode:
    STATUS_READY
    SET_LED LED=caselight RED=1 BLUE=1 GREEN=1
    
[gcode_macro LIGHTS_OFF]
gcode:
    STATUS_OFF
    SET_LED LED=caselight RED=0 BLUE=0 GREEN=0
    
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(50)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
   # G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    #G91
    #G1 E-5 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#[gcode_macro M600_RESUME]
#gcode:
#    {% set E = params.E|default(2.5)|float %}
#    {% set Z = params.Z|default(-20)|float %}
#    
#    SAVE_GCODE_STATE NAME=my_M600_resume_state
#    G91
#    G1 Z{Z} E{E} F9000
#    RESTORE_GCODE_STATE NAME=my_M600_resume_state
#    RESUME